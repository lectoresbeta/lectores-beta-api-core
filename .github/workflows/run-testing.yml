name: beta-readers-testing
on:
  pull_request:
    branches:
      - main

jobs:
  run-testing:
    if: false
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: can_all
          MYSQL_DATABASE:  beta_readers_api
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=7s
          --health-retries=5
          --health-start-period=0

    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: [ '8.1' ]
        dependency-stability: [ prefer-stable ]

    name: Beta Readers - ${{ matrix.php-versions }} - ${{ matrix.operating-system}} - Testing

    steps:
      - uses: actions/checkout@v4

      - name: Install PHP versions
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}

      - name: Get Composer Cache Directory 2
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v4
        id: actions-cache
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v4
        id: vendor-cache
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env', '.env.local');"

      - name: Install Dependencies
        run: |
          composer --version --no-ansi
          composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
          composer show --no-ansi

      - name: Show dir
        run: pwd

      - name: PHP Version
        run: php --version

      - name: Execute unitary tests
        run: ./vendor/bin/phpunit -c phpunit.xml --testdox --testsuite=unitary

      - name: Run database migrations
        env:
          DATABASE_URL: mysql://root:can_all@mysql:3306/beta_readers_api?serverVersion=8.0.32&charset=utf8mb4
        run: php bin/console doctrine:migrations:migrate --no-interaction --allow-no-migration

      - name: Execute acceptance tests
        env:
          DATABASE_URL: mysql://root:can_all@mysql:3306/beta_readers_api?serverVersion=8.0.32&charset=utf8mb4
        run: ./vendor/bin/phpunit -c phpunit.xml --testdox --testsuite=acceptance
